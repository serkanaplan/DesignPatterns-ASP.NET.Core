// <auto-generated />
using System;
using CompositeDesignPattern.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompositeDesignPattern.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompositeDesignPattern.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Component");

                    b.HasDiscriminator().HasValue("Component");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CompositeDesignPattern.Models.Category", b =>
                {
                    b.HasBaseType("CompositeDesignPattern.Models.Component");

                    b.HasDiscriminator().HasValue("Category");
                });

            modelBuilder.Entity("CompositeDesignPattern.Models.Product", b =>
                {
                    b.HasBaseType("CompositeDesignPattern.Models.Component");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("CompositeDesignPattern.Models.Component", b =>
                {
                    b.HasOne("CompositeDesignPattern.Models.Category", null)
                        .WithMany("Components")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CompositeDesignPattern.Models.Category", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
